generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  username           Int                @id @unique
  created_at         DateTime           @default(now())
  password           String
  name               String
  surname            String
  patronymic         String?
  preferred_settings PreferredSettings?
  contacts           Contact?
  addresses          Address[]
  login_histories    LoginHistory[]
  token              Token[]
  role               Role              @default(USER)

  @@map("users")
}

enum Role {
  VISITOR
  USER
  ADMIN
  OWNER

  @@map("roles")
}

model Contact {
  username              Int       @unique
  email                 String
  email_activated       Boolean   @default(false)
  email_activated_at    DateTime?
  phone                 String
  phone_activated       Boolean   @default(false)
  phone_activated_at    DateTime?
  user                  User      @relation(fields: [username], references: [username])

  @@map("contacts")
}

model LoginHistory {
  id         Int      @unique @default(autoincrement())
  username   Int
  login_time DateTime @default(now())
  ip_address String
  user_agent String
  user       User     @relation(fields: [username], references: [username])

  @@map("login_histories")
}

model Address {
  id        Int         @unique @default(autoincrement())
  username  Int
  street    String
  house     String
  apartment String?
  type      AddressType
  system_id String
  user      User        @relation(fields: [username], references: [username])

  @@map("addresses")
}

enum AddressType {
  GRAD
  UKEK

  @@map("address_type")
}

model PreferredSettings {
  username          Int     @unique
  preferred_theme   String  @default("dark")
  preferred_address String?
  user              User    @relation(fields: [username], references: [username])

  @@map("preferred_settings")
}

model Token {
  token      String   @unique
  expired_in DateTime
  username   Int
  user_agent String
  user       User     @relation(fields: [username], references: [username])

  @@map("tokens")
}

model Variable {
  key   String @id @unique
  value String

  @@map("variables")
}
