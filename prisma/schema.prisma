generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  username Int @unique @id
  created_at DateTime @default(now())
  password String
  name String
  surname String
  patronymic String?
  preferred_settings PreferredSettings?
  contacts Contact?
  addresses Address[]
  login_histories LoginHistory[]
  token Token[]
  role Role @default(VISITOR)
  @@map("users")
}

model Token {
  token String @unique
  expired_in DateTime
  username Int
  user User @relation(fields: [username],references: [username])
  @@map("tokens")
}


enum Role {
  VISITOR
  CITIZEN
  BUSINESS
  ADMIN
  SWE
  OWNER
  @@map("roles")
}

model PreferredSettings {
  username Int @unique
  preferred_theme String @default("dark")
  user User @relation(fields: [username],references: [username])
  @@map("preferred_settings")
}

model Contact {
  username Int @unique
  email String
  email_activation_code String
  email_activated Boolean @default(false)
  email_activated_at DateTime
  phone String
  phone_activation_code String
  phone_activated Boolean @default(false)
  phone_activated_at DateTime
  user User @relation(fields: [username], references: [username])
  @@map("contacts")
}

model LoginHistory {
  id Int @unique @default(autoincrement())
  username Int
  login_time DateTime @default(now())
  ip_address String?
  login_os String?
  login_browser String?
  user User @relation(fields: [username], references: [username])
  @@map("login_histories")
}

model Address {
  id Int @unique @default(autoincrement())
  username Int
  street String
  house String
  apartment String?
  g_account_id String?
  user User @relation(fields: [username], references: [username])
  @@map("addresses")
}

model Variable {
  key String @id @unique
  value String
  @@map("variables")
}